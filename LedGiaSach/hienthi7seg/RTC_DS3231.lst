C51 COMPILER V9.01   RTC_DS3231                                                            10/29/2020 11:49:41 PAGE 1   


C51 COMPILER V9.01, COMPILATION OF MODULE RTC_DS3231
OBJECT MODULE PLACED IN .\RTC_DS3231.obj
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE ..\lib\RTC_DS3231.c BROWSE DEBUG OBJECTEXTEND PRINT(.\RTC_DS3231.lst) OBJEC
                    -T(.\RTC_DS3231.obj)

line level    source

   1          #include"main.h"
   2          #include"..\lib\I2C.h"
   3          #include"RTC_DS3231.h"
   4          #include "..\lib\delay.h"
   5          
   6          void Ds3231_Init() //Khoi tao DS3231
   7          {
   8   1              unsigned char tmp;
   9   1              tmp = Ds3231_Read(0x00);
  10   1              tmp &= 0x7F;
  11   1              Ds3231_Write(0x00,tmp);         
  12   1      }
  13          
  14          void Ds3231_Write(unsigned char add, unsigned char dat) //Truyen du lieu vao DS3231 tu Master
  15          {
  16   1              I2c_Start();
  17   1              I2c_Write(0xD0);
  18   1              I2c_Write(add); 
  19   1              I2c_Write(dat); 
  20   1              I2c_Stop();
  21   1      }
  22          
  23          unsigned char Ds3231_Read(unsigned char add) // Master doc du lieu tu DS3231
  24          {
  25   1              unsigned char dat;
  26   1              I2c_Start();
  27   1              I2c_Write(0xD0); 
  28   1              I2c_Write(add);
  29   1              I2c_Start(); 
  30   1              I2c_Write(0xD1); 
  31   1              dat = I2c_Read(0);
  32   1              I2c_Stop();
  33   1              return dat;
  34   1      }
  35          
  36          bit Ds3231_Read_Time(unsigned char * hour, unsigned char * minute, // Doc gio/phut/giay tu DS3231 cho Mast
             -er
  37                  unsigned char * second, unsigned char * mode)
  38          {
  39   1              unsigned char h_tmp, m_tmp, s_tmp;
  40   1              bit am_pm;
  41   1              I2c_Start();
  42   1              I2c_Write(0xD0); 
  43   1              I2c_Write(0x00);
  44   1              I2c_Start(); 
  45   1              I2c_Write(0xD1); 
  46   1              s_tmp = I2c_Read(1);
  47   1              m_tmp = I2c_Read(1);
  48   1              h_tmp = I2c_Read(0);
  49   1              I2c_Stop();
  50   1      
  51   1              s_tmp &= 0x7F;
  52   1              *second = (s_tmp>>4)*10+(s_tmp&0x0F);
  53   1              m_tmp &= 0x7F;
C51 COMPILER V9.01   RTC_DS3231                                                            10/29/2020 11:49:41 PAGE 2   

  54   1              *minute = (m_tmp>>4)*10+(m_tmp&0x0F);
  55   1      
  56   1              if(h_tmp & 0x40)                // Mode 12h
  57   1              {
  58   2                      *mode = 12;
  59   2                      if(h_tmp & 0x20)
  60   2                      {
  61   3                              am_pm = 1;              // PM
  62   3                      }
  63   2                      else
  64   2                      {
  65   3                              am_pm = 0;
  66   3                      }
  67   2                      h_tmp &= 0x1F;
  68   2                      *hour = (h_tmp>>4)*10+(h_tmp&0x0F);
  69   2              }
  70   1              else
  71   1              {
  72   2                      *mode = 24;
  73   2                      h_tmp &= 0x3F;
  74   2                      *hour = (h_tmp>>4)*10+(h_tmp&0x0F);
  75   2                      if(*hour<12)
  76   2                      {
  77   3                              am_pm = 0;              // AM
  78   3                      }
  79   2                      else
  80   2                      {
  81   3                              am_pm = 1;
  82   3                      }
  83   2              }       
  84   1              return am_pm;
  85   1      }
  86          
  87          void Ds3231_Write_Time(unsigned char hour, unsigned minute,  // Chinh gio/phut/giay cho DS3231 tu Master
  88                  unsigned char second, unsigned char mode, bit apm)
  89          {
  90   1              second = ((second/10)<<4)|(second%10);
  91   1              minute = ((minute/10)<<4)|(minute%10);
  92   1              hour   = ((hour  /10)<<4)|(hour  %10);
  93   1              if(mode==12)
  94   1              {
  95   2                      hour |= 0x40;
  96   2                      if(apm)         // PM
  97   2                      {
  98   3                              hour |= 0x20;
  99   3                      }
 100   2              }
 101   1              I2c_Start();
 102   1              I2c_Write(0xD0);
 103   1              I2c_Write(0x00); 
 104   1              I2c_Write(second); 
 105   1              I2c_Write(minute);
 106   1              I2c_Write(hour);
 107   1              I2c_Stop();
 108   1      }
 109          
 110          //void Ds3231_Read_Date(unsigned char * day, unsigned char * date, // Doc ngay/thang/nam tu DS3231 cho Mas
             -ter
 111          //      unsigned char * month, unsigned char * year)
 112          //{
 113          //      I2c_Start();
 114          //      I2c_Write(0xD0); 
C51 COMPILER V9.01   RTC_DS3231                                                            10/29/2020 11:49:41 PAGE 3   

 115          //      I2c_Write(0x03);
 116          //      I2c_Start(); 
 117          //      I2c_Write(0xD1); 
 118          //      *day  = I2c_Read(1);
 119          //      *date = I2c_Read(1);
 120          //      *month= I2c_Read(1);
 121          //      *year = I2c_Read(0);
 122          //      I2c_Stop();
 123          //      *day &= 0x07;
 124          //      *date &= 0x3F;
 125          //      *date = (*date>>4)*10 + (*date & 0x0F);
 126          //      *month &= 0x1F;
 127          //      *month = (*month>>4)*10 + (*month & 0x0F);
 128          //      *year = (*year>>4)*10 + (*year & 0x0F); 
 129          //}
 130          //
 131          //void Ds3231_Write_Date(unsigned char day, unsigned char date, // Chinh ngay/thang/nam cho DS3231 tu Mast
             -er
 132          //      unsigned char month, unsigned char year)
 133          //{
 134          //      date    = ((date/10)<<4)  | (date%10);
 135          //      month   = ((month/10)<<4) | (month%10);
 136          //      year    = ((year/10)<<4)  | (year%10);
 137          //
 138          //      I2c_Start();
 139          //      I2c_Write(0xD0);
 140          //      I2c_Write(0x03); 
 141          //      I2c_Write(day); 
 142          //      I2c_Write(date);
 143          //      I2c_Write(month);
 144          //      I2c_Write(year);
 145          //      I2c_Stop();
 146          //}
 147          
 148          void Ds3231_Write_Bytes(unsigned char add, unsigned char * buff, // Gui 1byte cho DS3231 tu Master
 149                  unsigned char len)
 150          {
 151   1              unsigned char i=0;
 152   1      
 153   1              I2c_Start();
 154   1              I2c_Write(0xD0);
 155   1              I2c_Write(add);
 156   1              for(i=0;i<len;i++)
 157   1              {        
 158   2                      I2c_Write(buff[i]); 
 159   2              } 
 160   1              I2c_Stop();
 161   1      }
 162          
 163          void Ds3231_Read_Bytes(unsigned char add,unsigned char * buff, //Doc 1byte tu DS3231 cho Master
 164                  unsigned char len)
 165          {
 166   1              unsigned char i;
 167   1      
 168   1              I2c_Start();
 169   1              I2c_Write(0xD0); 
 170   1              I2c_Write(add);
 171   1              I2c_Start();
 172   1              I2c_Write(0xD1);
 173   1              for(i=0;i<len-1;i++)
 174   1              { 
 175   2                      buff[i]  = I2c_Read(1);
C51 COMPILER V9.01   RTC_DS3231                                                            10/29/2020 11:49:41 PAGE 4   

 176   2              }
 177   1              buff[i]  = I2c_Read(0);
 178   1              I2c_Stop();
 179   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    588    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      36
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----       2
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
